{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\module/assets\\Script\\module\\HttpServer.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\module","sourcesContent":["\r\nclass httpServer {\r\n    private static _httpServer: httpServer = null\r\n    static getInstance(): httpServer {\r\n        if (!httpServer._httpServer)\r\n        httpServer._httpServer = new httpServer()\r\n        return httpServer._httpServer;\r\n    }\r\n    private URL=\"http://localhost:3000/\";\r\n\r\n    private _on(xhr: XMLHttpRequest, mathFunc: string, url: string, cb?: Function) {\r\n        xhr.onreadystatechange = () => {\r\n            if (xhr.readyState === 4 && (xhr.status >= 200 && xhr.status < 300)) {\r\n                let responseText = decodeURI(xhr.responseText.replace(/%/g, '%25'))\r\n                if (cb) cb(responseText);\r\n            }\r\n        };\r\n    }\r\n    get(api: string,headers: Object, cb?: Function) {\r\n        if (headers instanceof Function) {\r\n            cb = headers\r\n            headers = null\r\n        }\r\n        let url=this.URL+api\r\n        var xhr = cc.loader.getXMLHttpRequest();\r\n        this._on(xhr, \"GET\", url, cb);\r\n        xhr.open(\"GET\", url, true);\r\n        if (headers)\r\n            for (var key in headers) {\r\n                xhr.setRequestHeader(key, encodeURI(headers[key]));\r\n            }\r\n        xhr.timeout = 10000; // for timeout\r\n        xhr.send();\r\n    }\r\n\r\n    post(url: string,headers: Object, data?: Object, cb?: Function) {\r\n        var xhr = cc.loader.getXMLHttpRequest();\r\n        let _url=this.URL+url\r\n        this._on(xhr, \"POST\", _url, cb);\r\n        xhr.open(\"POST\", _url);\r\n        if (headers)\r\n            for (var key in headers) {\r\n                xhr.setRequestHeader(key, encodeURI(headers[key]));\r\n            }\r\n        xhr.timeout = 10000;\r\n        if (data == null) xhr.send(null);\r\n        else {\r\n            let str = ''\r\n            for (let k in data) {\r\n                str += encodeURI(k) + '=' + encodeURI(data[k]) + '&'\r\n            }\r\n            //cc.log(str)\r\n            xhr.send(str);\r\n        }\r\n    }\r\n\r\n}\r\nexport { httpServer }\r\n"]}